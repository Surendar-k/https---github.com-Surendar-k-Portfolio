/*
 jQuery animateNumber plugin v0.0.14
 (c) 2013, Alexandr Borisov.
 https://github.com/aishek/jquery-animateNumber
*/
(function($) {
    // Helper function to reverse a string
    function reverseString(str) {
        return str.split("").reverse().join("");
    }

    // Default settings for the plugin
    var defaults = {
        numberStep: function(animateProperties, elem) {
            // Update the element's text with the current number value
            var value = Math.floor(animateProperties);
            $(elem).text(value);
        }
    };

    // Function to handle the animation step for numbers
    function handleNumberStep(animateProperties) {
        var elem = animateProperties.elem;

        if (elem.nodeType && elem.parentNode) {
            var setter = elem._animateNumberSetter;

            // Use the provided numberStep function or default one
            setter = setter || defaults.numberStep;
            setter(animateProperties.now, animateProperties);
        }
    }

    // Register the plugin with jQuery
    if ($.Tween && $.Tween.propHooks) {
        $.Tween.propHooks.number = { set: handleNumberStep };
    } else {
        $.fx.step.number = handleNumberStep;
    }

    // Plugin method to handle number animation
    $.animateNumber = {
        // Factories to create custom number formatting functions
        numberStepFactories: {
            // Appends a string to the number
            append: function(suffix) {
                return function(number, elem) {
                    var value = Math.floor(number);
                    $(elem).prop("number", number).text(value + suffix);
                };
            },
            // Adds separators (like commas) to the number
            separator: function(separator, groupSize, suffix) {
                separator = separator || " ";
                groupSize = groupSize || 3;
                suffix = suffix || "";
                return function(number, elem) {
                    var isNegative = number < 0;
                    var absNumber = Math.floor(Math.abs(number)).toString();
                    var formattedNumber = $(elem);

                    // Add separators to the number
                    if (absNumber.length > groupSize) {
                        var reversed = reverseString(absNumber);
                        var chunks = [];

                        for (var i = 0; i < reversed.length; i += groupSize) {
                            chunks.push(reversed.substring(i, i + groupSize));
                        }

                        formattedNumber = reverseString(chunks.join(separator));
                    } else {
                        formattedNumber = absNumber;
                    }

                    formattedNumber = (isNegative ? "-" : "") + formattedNumber + suffix;
                    formattedNumber.prop("number", number).text(formattedNumber);
                };
            }
        }
    };

    // jQuery plugin definition
    $.fn.animateNumber = function() {
        var options = arguments[0];
        var settings = $.extend({}, defaults, options);
        var elements = $(this);
        var args = [settings];

        // Collect additional arguments
        for (var i = 1; i < arguments.length; i++) {
            args.push(arguments[i]);
        }

        if (options.numberStep) {
            elements.each(function() {
                this._animateNumberSetter = options.numberStep;
            });

            var originalComplete = settings.complete;
            settings.complete = function() {
                elements.each(function() {
                    delete this._animateNumberSetter;
                });

                if (originalComplete) {
                    originalComplete.apply(this, arguments);
                }
            };
        }

        return elements.animate.apply(elements, args);
    };
})(jQuery);
